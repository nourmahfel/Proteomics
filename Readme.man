NAME

Enz_digest – produces a list of cut peptides with their respective sequence names and prints the output in .peps files.

SYNOPSIS

[-h] – gives a user friendly help message.
[i] – The user is required to enter the name of the fasta file. The file must be in a fasta format.
enz_digest [trypsin, lys-c, arg-c, v8_prot] – The user specifies enzyme name. Four options are allowed for the user to choose from.

DESCRIPTION
**enz_digest** generates an in-sllico digested peptides from long chain proteins from a fasta file. The command requires a fasta file to run. The command copes with a user-defined choice of digesting enzymes, from the following set: trypsin, lys-c, arg-c, v8_prot. Trypsin cuts at lysine (K) or arginine (R), arg-C cuts at arginine (K), lys-c cuts at lysine (K) and v8_prot cuts at glutamic acid (E). All enzymes cut at their respective sites unless the next amino acid is proline. The system uses regular expression to cut enzymes at specific positions. An output is generated in four different files with peptide lists and their respective open reading frame names (orfs). The name of the file with the peptide lists’ output is provided for the user in the terminal. 

EXAMPLES
python3 group1_task2.py task1.fasta trypsin
Cuts strings of protein sequences at K and R into peptide lists with respective names of orfs. Provides an output in task2t.peps file.
python3 group1_task2.py file.fasta lys-c
Cuts strings of protein sequences at E into peptide lists with respective names of orfs. Provides an output in task2v.peps file.
 
COMPATIBILITY 

Compatible with Python 3

AUTHOR

Nour Mahfel
